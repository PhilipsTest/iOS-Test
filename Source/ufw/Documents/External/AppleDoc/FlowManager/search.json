{"Typealiases.html#/s:13UAPPFramework12StateMapTypea":{"name":"StateMapType","abstract":"<p>Aliasing(Extending the behavior of an existing named type) the defined dictionary to a variable, With value to be of type BaseState class</p>"},"Typealiases.html#/s:13UAPPFramework16ConditionMapTypea":{"name":"ConditionMapType","abstract":"<p>Aliasing the defined dictionary to a variable, With value to be of type BaseCondition class</p>"},"Structs.html#/s:13UAPPFramework14ConditionModelV":{"name":"ConditionModel","abstract":"<p>Model used to map the json data of nextStates and Conditions.</p>"},"Structs.html#/s:13UAPPFramework10EventModelV":{"name":"EventModel","abstract":"<p>Model used to map variables to eventId and nextStates.</p>"},"Structs.html#/s:13UAPPFramework10StateModelV":{"name":"StateModel","abstract":"<p>Model used to map variables to state and events.</p>"},"Structs.html#/s:13UAPPFramework12AppFlowModelV":{"name":"AppFlowModel","abstract":"<p>Model used to map variables to firstState and states.</p>"},"Protocols/StateCommunicationListener.html#/c:@M@UAPPFramework@objc(pl)StateCommunicationListener(im)communicateFromState:":{"name":"communicateFromState(_:)","abstract":"<p>Implement this method to create a bridge from and to a State</p>","parent_name":"StateCommunicationListener"},"Protocols/StateCommunicationListener.html":{"name":"StateCommunicationListener","abstract":"<p>StateCommunicationListener is a protocol which bridges a Communication from and to a State</p>"},"Functions.html#/s:13UAPPFramework2eeoiySbAA13BaseConditionC_ADtF":{"name":"==(_:_:)","abstract":"<p>Defines the logic for ==</p>"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO15jsonSyntaxErroryA2CmF":{"name":"jsonSyntaxError","abstract":"<p>This error is thrown when there is a error in the Flow Json structure</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO17noEventFoundErroryA2CmF":{"name":"noEventFoundError","abstract":"<p>This error is thrown when the Event Id passed doesnot match any EventId in the Json</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO17noStateFoundErroryA2CmF":{"name":"noStateFoundError","abstract":"<p>This error is thrown when there is no State found in the StateMap with the given State Id</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO21noConditionFoundErroryA2CmF":{"name":"noConditionFoundError","abstract":"<p>This error is thrown when there is no State found in the ConditionMap with the given Condition Id</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO14nullStateErroryA2CmF":{"name":"nullStateError","abstract":"<p>This error is thrown when there null State has been passed to the Flow Manager&rsquo;s getNextState API</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO14nullEventErroryA2CmF":{"name":"nullEventError","abstract":"<p>This error is thrown when there null Event has been passed to the Flow Manager&rsquo;s getNextState API</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO17fileNotFoundErroryA2CmF":{"name":"fileNotFoundError","abstract":"<p>This error is thrown when there is no Flow Json file found in the path given</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO04flowC19InitializationErroryA2CmF":{"name":"flowManagerInitializationError","abstract":"<p>This error is thrown when a call has been made to Flow Manager APIs without initialisng the app&rsquo;s flow</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO04flowC23AlreadyInitializedErroryA2CmF":{"name":"flowManagerAlreadyInitializedError","abstract":"<p>This error is thrown when Flow Manager is being initialise multiple times</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO20stateIdNotFoundErroryA2CmF":{"name":"stateIdNotFoundError","abstract":"<p>This error is thrown when the State Id passed doesnot match any StateId in the Json</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO24conditionIdNotFoundErroryA2CmF":{"name":"conditionIdNotFoundError","abstract":"<p>This error is thrown when the Condition Id passed doesnot match any ConditionId in the Json</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO07nullAppB10ModelErroryA2CmF":{"name":"nullAppFlowModelError","abstract":"<p>This error is thrown when the Condition Id passed doesnot match any ConditionId in the Json</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO7messageSSyF":{"name":"message()","abstract":"<p>This will return a error message for all FlowManagerErrors encountered</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html#/s:13UAPPFramework17FlowManagerErrorsO4codeSiyF":{"name":"code()","abstract":"<p>This will return a error code for all FlowManagerErrors encountered</p>","parent_name":"FlowManagerErrors"},"Enums/FlowManagerErrors.html":{"name":"FlowManagerErrors","abstract":"<p>FlowManagerErrors is an enum which holds all error values of Flow Manager</p>"},"Classes/BaseState.html#/c:@M@UAPPFramework@objc(cs)BaseState(py)stateId":{"name":"stateId","abstract":"<p>State Id of the State Object</p>","parent_name":"BaseState"},"Classes/BaseState.html#/c:@M@UAPPFramework@objc(cs)BaseState(im)initWithStateId:":{"name":"init(stateId:)","abstract":"<p>State Initialiser</p>","parent_name":"BaseState"},"Classes/BaseState.html#/c:@M@UAPPFramework@objc(cs)BaseState(im)getViewController":{"name":"getViewController()","abstract":"<p>Method getViewController is to be implemented by all state classes which gives the next ViewController</p>","parent_name":"BaseState"},"Classes/BaseState.html#/c:@M@UAPPFramework@objc(cs)BaseState(im)setStateCompletionDelegate:":{"name":"setStateCompletionDelegate(_:)","abstract":"<p>This method sets the delegate for StateCommunicationListener protocol</p>","parent_name":"BaseState"},"Classes/BaseState.html#/c:@M@UAPPFramework@objc(cs)BaseState(im)updateDataModel":{"name":"updateDataModel()","abstract":"<li>Method updateDataModel is implemented to pass data to any Common components like InAppPurchase, UserRegistration, ConsumerCare, ProductRegistration&hellip;</li>","parent_name":"BaseState"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC03appC5ModelAA03AppcF0VSgvp":{"name":"appFlowModel","abstract":"<p>State flow model as defined in the json</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/c:@M@UAPPFramework@objc(cs)BaseFlowManager(cpy)appFlowJsonPath":{"name":"appFlowJsonPath","abstract":"<h3 id='deprecated' class='heading'>DEPRECATED</h3>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/c:@M@UAPPFramework@objc(cs)BaseFlowManager(im)init":{"name":"init()","abstract":"<p>Default Initializer</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/c:@M@UAPPFramework@objc(cs)BaseFlowManager(im)initWithAppFlowJsonPath:":{"name":"init(withAppFlowJsonPath:)","abstract":"<p>To initialize the Flow Manager with App Flow configuration like Json and Maps</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC10initialize07withAppC8JsonPath12successBlock07failureK0ySS_yycyAA0cD6ErrorsOctF":{"name":"initialize(withAppFlowJsonPath:successBlock:failureBlock:)","abstract":"<p>To initialise the Flow Manager with App Flow configuration like Json and Maps</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC10initialize07withAppC5ModelyAA0gcH0VSg_tKF":{"name":"initialize(withAppFlowModel:)","abstract":"<p>To initialise the Flow Manager with App Flow mode</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC12getBackStateyAA0bG0CSgAFKF":{"name":"getBackState(_:)","abstract":"<p>To get the State when custom navigation back button has been pressed.</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC12getBackStateAA0bG0CSgyKF":{"name":"getBackState()","abstract":"<p>To get the State when custom navigation back button has been pressed. This by default takes the current State of the app</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/c:@M@UAPPFramework@objc(cs)BaseFlowManager(im)getCurrentState":{"name":"getCurrentState()","abstract":"<p>To get the current state of the app</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC16populateStateMapyySDySSAA0bF0CGzF":{"name":"populateStateMap(_:)","abstract":"<p>Method to be implemented by the child classes for mapping the app states with corresponding state classes, inherited from baseState class</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC20populateConditionMapyySDySSAA0bF0CGzF":{"name":"populateConditionMap(_:)","abstract":"<p>Method to be implemented by the child classes for mapping the app conditions with corresponding condition classes, inhereted from baseCondition class</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC8getStateyAA0bF0CSgSSF":{"name":"getState(_:)","abstract":"<p>Call this method to get the state, which is mapped with the corresponding stateId</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC12getConditionyAA0bF0CSgSSF":{"name":"getCondition(_:)","abstract":"<p>Call this method to get the condition, which is mapped with the corresponding conditionId</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC12getNextStateyAA0bG0CSgSSSgKF":{"name":"getNextState(_:)","abstract":"<p>Returns next state for the specified state. This takes the current State by default</p>","parent_name":"BaseFlowManager"},"Classes/BaseFlowManager.html#/s:13UAPPFramework15BaseFlowManagerC12getNextState_10forEventIdAA0bG0CSgAH_SSSgtKF":{"name":"getNextState(_:forEventId:)","abstract":"<p>Returns next state for the specified state.</p>","parent_name":"BaseFlowManager"},"Classes/BaseCondition.html#/c:@M@UAPPFramework@objc(cs)BaseCondition(py)conditionId":{"name":"conditionId","abstract":"<p>Variable to hold the condition Id of the Condition</p>","parent_name":"BaseCondition"},"Classes/BaseCondition.html#/c:@M@UAPPFramework@objc(cs)BaseCondition(im)initWithConditionId:":{"name":"init(conditionId:)","abstract":"<p>Initialization method to initialise a Condition</p>","parent_name":"BaseCondition"},"Classes/BaseCondition.html#/c:@M@UAPPFramework@objc(cs)BaseCondition(im)isSatisfied":{"name":"isSatisfied()","abstract":"<p>isSatisfied is a method to be implemented in classes that inherits BaseCondition class to check the condition the app is at</p>","parent_name":"BaseCondition"},"Classes/BaseCondition.html":{"name":"BaseCondition","abstract":"<p>Base class for condition checks</p>"},"Classes/BaseFlowManager.html":{"name":"BaseFlowManager","abstract":"<p>Flow Manager class which handles reading application flow from configuration json and manage different state transitions</p>"},"Classes/BaseState.html":{"name":"BaseState","abstract":"<p>BaseState is the base State class from which all State classes will be derived</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}