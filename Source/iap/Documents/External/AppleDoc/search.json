{"Protocols/IAPCartIconProtocol.html#/s:13InAppPurchase19IAPCartIconProtocolP18didUpdateCartCountyyF":{"name":"didUpdateCartCount()","abstract":"<p>This method of IAPCartIconProtocol notifies the implementation class to update the cart count</p>","parent_name":"IAPCartIconProtocol"},"Protocols/IAPCartIconProtocol.html#/s:13InAppPurchase19IAPCartIconProtocolP010updateCartE10VisibilityySbF":{"name":"updateCartIconVisibility(_:)","abstract":"<p>This method of IAPCartIconProtocol notifies the implementation class to make the cart icon visible or not</p>","parent_name":"IAPCartIconProtocol"},"Protocols/IAPCartIconProtocol.html":{"name":"IAPCartIconProtocol","abstract":"<p>Vertical needs to adopt IAPCartIconProtocol to handle visibility of cart icon and updating cart count. This protocol has two methods.</p>"},"Classes/IAPLaunchInput/IAPFlow.html#/s:13InAppPurchase14IAPLaunchInputC7IAPFlowO23iapProductCatalogueViewA2EmF":{"name":"iapProductCatalogueView","abstract":"<p>iapProductCatalogueView enum is used for product catalogue view</p>","parent_name":"IAPFlow"},"Classes/IAPLaunchInput/IAPFlow.html#/s:13InAppPurchase14IAPLaunchInputC7IAPFlowO19iapShoppingCartViewA2EmF":{"name":"iapShoppingCartView","abstract":"<p>iapShoppingCartView enum is used for shopping cart view</p>","parent_name":"IAPFlow"},"Classes/IAPLaunchInput/IAPFlow.html#/s:13InAppPurchase14IAPLaunchInputC7IAPFlowO03iapC11HistoryViewA2EmF":{"name":"iapPurchaseHistoryView","abstract":"<p>iapPurchaseHistoryView enum is used for order history view</p>","parent_name":"IAPFlow"},"Classes/IAPLaunchInput/IAPFlow.html#/s:13InAppPurchase14IAPLaunchInputC7IAPFlowO20iapProductDetailViewA2EmF":{"name":"iapProductDetailView","abstract":"<p>iapProductDetailView enum is used for product detail view</p>","parent_name":"IAPFlow"},"Classes/IAPLaunchInput/IAPFlow.html#/s:13InAppPurchase14IAPLaunchInputC7IAPFlowO16iapBuyDirectViewA2EmF":{"name":"iapBuyDirectView","abstract":"<p>iapBuyDirectView enum is used for buy direct view</p>","parent_name":"IAPFlow"},"Classes/IAPLaunchInput/IAPFlow.html#/s:13InAppPurchase14IAPLaunchInputC7IAPFlowO27iapCategorizedCatalogueViewA2EmF":{"name":"iapCategorizedCatalogueView","abstract":"<p>iapCategorizedCatalogueView enum is used for categorized catalogue view</p>","parent_name":"IAPFlow"},"Classes/IAPLaunchInput.html#/s:13InAppPurchase14IAPLaunchInputC11landingViewAC7IAPFlowOSgv":{"name":"landingView","abstract":"<p>landingView is responsible for initializing the flow required for launching.</p>","parent_name":"IAPLaunchInput"},"Classes/IAPLaunchInput.html#/s:13InAppPurchase14IAPLaunchInputC5themeXev":{"name":"theme","abstract":"<p>theme is responsible for initializing the theme required for launching.</p>","parent_name":"IAPLaunchInput"},"Classes/IAPLaunchInput.html#/s:13InAppPurchase14IAPLaunchInputC16cartIconDelegateAA07IAPCartG8Protocol_pSgXwv":{"name":"cartIconDelegate","abstract":"<p>cartIconDelegate is the delegate responsible for handling the communication between micro app and vertical app.</p>","parent_name":"IAPLaunchInput"},"Classes/IAPLaunchInput.html#/s:13InAppPurchase14IAPLaunchInputCXeXecfc":{"name":"init(theme:)","abstract":"<p>IAPLaunchInput init method to initialize IAPLaunchInput with UIDTheme</p>","parent_name":"IAPLaunchInput"},"Classes/IAPLaunchInput.html#/s:13InAppPurchase14IAPLaunchInputC10setIAPFlowyAC0G0O_AA0gE0C12withSettingsSaySSG20ignoredRetailersListtF":{"name":"setIAPFlow(_:withSettings:ignoredRetailersList:)","abstract":"<p>IAPLaunchInput setIAPFlow method to set the flow of uApp with required inputs</p>","parent_name":"IAPLaunchInput"},"Classes/IAPLaunchInput/IAPFlow.html":{"name":"IAPFlow","abstract":"<p>This enum is used to set the landing view of IAP</p>","parent_name":"IAPLaunchInput"},"Classes/IAPInterface.html#/s:13InAppPurchase12IAPInterfaceCXeXecfc":{"name":"init(dependencies:andSettings:)","abstract":"<p>IAPInterface init method</p>","parent_name":"IAPInterface"},"Classes/IAPInterface.html#/s:13InAppPurchase12IAPInterfaceC25instantiateViewControllerXeXeF":{"name":"instantiateViewController(_:withErrorHandler:)","abstract":"<p>IAPInterface instantiateViewController will initializes the rootviewcontroller of the uApp</p>","parent_name":"IAPInterface"},"Classes/IAPInterface.html#/c:@M@InAppPurchase@objc(cs)IAPInterface(im)fetchCompleteProductList:failureHandler:":{"name":"fetchCompleteProductList(_:failureHandler:)","abstract":"<p>IAPInterface fetchCompleteProductList will fetch the product ctn list</p>","parent_name":"IAPInterface"},"Classes/IAPInterface.html#/c:@M@InAppPurchase@objc(cs)IAPInterface(im)getProductCartCount:failureHandler:":{"name":"getProductCartCount(_:failureHandler:)","abstract":"<p>IAPInterface getProductCartCount will fetch the cart count</p>","parent_name":"IAPInterface"},"Classes/IAPInterface.html#/c:@M@InAppPurchase@objc(cs)IAPInterface(im)isCartVisible:failureHandler:":{"name":"isCartVisible(_:failureHandler:)","abstract":"<p>IAPInterface isCartVisible method will inform the uApp for cart visibility. It&rsquo;s an optional method</p>","parent_name":"IAPInterface"},"Classes/IAPFlowInput.html#/c:@M@InAppPurchase@objc(cs)IAPFlowInput(im)init":{"name":"init()","abstract":"<p>IAPFlowInput init method. Default initialization method of IAPFlowInput.</p>","parent_name":"IAPFlowInput"},"Classes/IAPFlowInput.html#/c:@M@InAppPurchase@objc(cs)IAPFlowInput(im)initInCTN:":{"name":"init(inCTN:)","abstract":"<p>IAPFlowInput init method as a overloaded constructor. It initializes IAPFlowInput with one ctn value</p>","parent_name":"IAPFlowInput"},"Classes/IAPFlowInput.html#/c:@M@InAppPurchase@objc(cs)IAPFlowInput(im)initInCTNList:":{"name":"init(inCTNList:)","abstract":"<p>IAPFlowInput init method as a overloaded constructor. It initializes IAPFlowInput with array of ctn list</p>","parent_name":"IAPFlowInput"},"Classes/IAPFlowInput.html":{"name":"IAPFlowInput","abstract":"<p>IAPFlowInput initializes the required ctn&rsquo;s for InAppPurchase to set the flow of micro app.</p>"},"Classes/IAPInterface.html":{"name":"IAPInterface","abstract":"<p>IAPInterface is the public interface for any proposition to consume InAppPurchase micro app. Its the starting intitialization point.</p>"},"Classes.html#/s:13InAppPurchase11IAPSettingsC":{"name":"IAPSettings","abstract":"<p>IAPSettings class is used to initialize basic settings for InAppPurchase. Right now InAppPurchase doesnâ€™t have any settings to be initialized. So only default initialization of IAPSettings is required to be passed while creating IAPInterface object.</p>"},"Classes.html#/s:13InAppPurchase15IAPDependenciesC":{"name":"IAPDependencies","abstract":"<p>IAPDependencies handles the dependency required for IAP. SO right now IAP has one dependency i.e AppInfra. So vertical needs to initialize IAPDependencies and set the app infra object. This app infra object will be responsible for logging, tagging and some configuration.</p>"},"Classes/IAPLaunchInput.html":{"name":"IAPLaunchInput","abstract":"<p>IAPLaunchInput is responsible for initializing the settings required for launching.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}